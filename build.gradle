plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "jacoco"
	id "org.sonarqube"
	id "com.google.cloud.tools.jib"
}

group = 'com.searchservice.egress'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

apply from: "gradle/docker.gradle"
apply from: "gradle/sonar.gradle"
apply plugin: "eclipse"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

//===============TO RUN JUINT TESTCASES====================
test {
    useJUnitPlatform()
    exclude "**/*IT*", "**/*IntTest*"
    testLogging {
        events 'FAILED', 'SKIPPED'
    }
    jvmArgs += '-Djava.security.egd=file:/dev/./urandom -Xmx256m'
    // uncomment if the tests reports are not generated
    // see https://github.com/jhipster/generator-jhipster/pull/2771 and https://github.com/jhipster/generator-jhipster/pull/4484
    // ignoreFailures true
    reports.html.enabled = false
}
task integrationTest(type: Test) {
	useJUnitPlatform()
	description = "Execute integration tests."
	group = "verification"
	include "**/*IT*", "**/*IntTest*"
	testLogging {
		events 'FAILED', 'SKIPPED'
	}
	jvmArgs += '-Djava.security.egd=file:/dev/./urandom -Xmx256m'
	if (project.hasProperty('testcontainers')) {
		environment 'spring.profiles.active', 'testcontainers'
	}

	// uncomment if the tests reports are not generated
	// see https://github.com/jhipster/generator-jhipster/pull/2771 and https://github.com/jhipster/generator-jhipster/pull/4484
	// ignoreFailures true
	reports.html.enabled = false
}

check.dependsOn integrationTest
task testReport(type: TestReport) {
	destinationDir = file("$buildDir/reports/tests")
	reportOn test
}

task integrationTestReport(type: TestReport) {
	destinationDir = file("$buildDir/reports/tests")
	reportOn integrationTest
}
jacocoTestReport {
    getExecutionData().setFrom(fileTree(buildDir).include("/jacoco/*.exec"))
}
//==========================================================

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	annotationProcessor "org.glassfish.jaxb:jaxb-runtime:${jaxbRuntimeVersion}"

	//Swagger UI
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.5.10'

	//SolrJ
	implementation group: 'org.springframework.data', name: 'spring-data-solr', version: '4.3.14'

	//Lombok
	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'
	testCompileOnly 'org.projectlombok:lombok:1.18.22'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
	
	//Date-time util
	implementation group: 'joda-time', name: 'joda-time', version: '2.10.13'
	
	//JSON
	implementation group: 'org.json', name: 'json', version: '20200518'
	implementation group: 'org.jboss.logging', name: 'jboss-logging', version: '3.5.0.Final'
	
	//RabbitMQ
	implementation "org.springframework.boot:spring-boot-starter-amqp"
	testImplementation group: 'org.springframework.amqp', name: 'spring-rabbit-test', version: '1.6.0.RELEASE'

	// Rate Limiter
	implementation group: 'io.github.resilience4j', name: 'resilience4j-spring-boot2', version: '1.5.0'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: '2.5.4'
	implementation group: 'com.squareup.okhttp', name: 'okhttp', version: '2.7.5'
	
	// Spring Security
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.6.3'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'
	//Spring Aop
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: '2.3.4.RELEASE'
	
    //Memcache 
	implementation group: 'net.spy', name: 'spymemcached', version: '2.12.3'
		
	//Token decoder
	implementation group: 'commons-codec', name: 'commons-codec', version: '1.15'
  
  	//Static Mocks
	testImplementation group: 'org.mockito', name: 'mockito-inline', version: '3.8.0'
  
}


tasks.named('test') {
	useJUnitPlatform()
}
